{"version":3,"file":"static/js/161.9419b4e2.chunk.js","mappings":"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","sources":["hooks/useRequest.js","components/common/CartIconButton.jsx","components/common/FloatingActionButton.jsx","pages/ProductListPage.jsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\n\nconst useRequest = (callback) => {\n  const [data, setDate] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState({ isError: false, message: '' });\n\n  const getData = useCallback(callback, [callback]);\n\n  useEffect(() => {\n    getData()\n      .then((res) => {\n        setDate(res.data);\n        setLoading(false);\n        return;\n      })\n      .catch((err) => setError({ isError: true, message: err.message }));\n  }, []);\n\n  return { data, loading, error };\n};\n\nexport default useRequest;\n","import React, { useState, useEffect } from 'react';\nimport { GiShoppingCart } from 'react-icons/gi';\nimport styled from 'styled-components';\n\nfunction CartIconButton({ product, onClickCallback, isInCart }) {\n  const [isClicked, setIsClicked] = useState(false);\n\n  useEffect(() => {\n    setIsClicked(isInCart);\n  }, [isInCart]);\n\n  const handleClickCart = () => setIsClicked((prev) => !prev);\n\n  return (\n    <StyledIconButton\n      onClick={() => {\n        handleClickCart(product);\n        onClickCallback({ tryAdd: !isClicked, product });\n      }}\n      clicked={isClicked ? 1 : 0}>\n      <GiShoppingCart size={25} />\n    </StyledIconButton>\n  );\n}\n\nconst StyledIconButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  border-radius: 16px;\n  background: ${({ clicked, theme }) => (clicked ? theme.COLORS.LIGHT_PRIMARY : 'none')};\n  color: ${({ clicked, theme }) => (clicked ? theme.COLORS.PRIMARY : 'black')};\n  &:hover {\n    transform: scale(1.1);\n    color: ${({ theme }) => theme.COLORS.PRIMARY};\n  }\n`;\n\nexport default CartIconButton;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { GiShoppingCart } from 'react-icons/gi';\n\nfunction FloatingActionButton({ count }) {\n  return (\n    <StyledContainer>\n      <StyledFabBox>\n        <GiShoppingCart size={60} color={'#fff'} />\n        <StyledCountBox>\n          <span>{count}</span>\n        </StyledCountBox>\n      </StyledFabBox>\n    </StyledContainer>\n  );\n}\n\nconst StyledContainer = styled.div`\n  position: fixed;\n  right: 10%;\n  bottom: 10%;\n  cursor: pointer;\n`;\n\nconst StyledFabBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100px;\n  height: 100px;\n  background: ${({ theme }) => theme.COLORS.PRIMARY};\n  border-radius: 100%;\n  box-shadow: 8px 8px 8px #00000080;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nconst StyledCountBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  top: 16%;\n  right: 16%;\n  font-size: 1.2rem;\n  font-weight: bold;\n  color: ${({ theme }) => theme.COLORS.PRIMARY};\n  background: ${({ theme }) => theme.COLORS.WHITE};\n  border: 4px solid ${({ theme }) => theme.COLORS.PRIMARY};\n  border-radius: 100%;\n  animation: smoothAppear 1s 0s ease;\n  @keyframes smoothAppear {\n    from {\n      opacity: 0;\n      transform: translateY(-5%);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n`;\n\nexport default FloatingActionButton;\n","import { useNavigate, Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { BASE_COMPONENT, StyledImageWrapper, StyledImg } from '../components/common';\nimport useRequest from '../hooks/useRequest';\nimport { getProductList } from '../api';\nimport CartIconButton from '../components/common/CartIconButton';\nimport { AddProductToCartAsync, removeProductToCartAsync } from '../store/modules/cart/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useMemo } from 'react';\nimport FloatingActionButton from '../components/common/FloatingActionButton';\nimport Loading from '../components/common/Loading';\n\nfunction ProductListPage() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { count, products: productsInCart } = useSelector((state) => state.cart);\n  const { data: productList, loading } = useRequest(getProductList);\n\n  const idsInCart = useMemo(() => productsInCart.map((product) => product.id), [productsInCart]);\n\n  const handleClickItem = (id) => navigate(`${id}`);\n\n  const onClickCartIcon = ({ tryAdd, product }) => {\n    if (tryAdd) {\n      dispatch(AddProductToCartAsync(product));\n      return;\n    }\n    dispatch(removeProductToCartAsync(product.id));\n  };\n\n  if (loading) return <Loading />;\n\n  return (\n    <StyledContent>\n      <StyledGridContainer>\n        {productList.map((product) => {\n          return (\n            <ProductContainer\n              key={product.id}\n              product={product}\n              handleClickItem={handleClickItem}\n              onClickCartIcon={onClickCartIcon}\n              productsInCart={productsInCart}\n              idsInCart={idsInCart}\n            />\n          );\n        })}\n      </StyledGridContainer>\n      <Link to={'/cart'}>\n        <FloatingActionButton count={count} />\n      </Link>\n    </StyledContent>\n  );\n}\n\nconst ProductContainer = ({ product, handleClickItem, onClickCartIcon, idsInCart }) => {\n  const { id, name, price, imageUrl } = product;\n\n  const isInCart = idsInCart.includes(id);\n\n  return (\n    <StyledItem key={id}>\n      <StyledImageWrapper width={'middle'} height={'middle'} onClick={() => handleClickItem(id)}>\n        <StyledImg width={'middle'} src={imageUrl} />\n      </StyledImageWrapper>\n      <StyledItemInfoBox>\n        <StyledItemInfo onClick={() => handleClickItem(id)}>\n          <StyledItemName>{name}</StyledItemName>\n          <StyledItemPrice>{Number(price).toLocaleString()} Ïõê</StyledItemPrice>\n        </StyledItemInfo>\n        <CartIconButton product={product} onClickCallback={onClickCartIcon} isInCart={isInCart} />\n      </StyledItemInfoBox>\n    </StyledItem>\n  );\n};\n\nconst StyledContent = styled.div`\n  width: 100%;\n  height: 100%;\n  margin-top: 5vh;\n`;\n\nconst StyledGridContainer = styled.div`\n  display: grid;\n  gap: 18px;\n  width: 80%;\n  grid-template-columns: repeat(4, 1fr);\n  margin: auto;\n  overflow: auto;\n`;\n\nconst StyledItem = styled.div`\n  width: 250px;\n  height: 330px;\n  cursor: pointer;\n`;\n\nconst StyledItemInfoBox = styled(BASE_COMPONENT.flexCenterWrapper)`\n  justify-content: space-between;\n  margin: 16px 8px 0px 8px;\n`;\n\nconst StyledItemInfo = styled(BASE_COMPONENT.flexWrapper)`\n  flex-direction: column;\n`;\n\nconst StyledItemName = styled.span`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 22px;\n  letter-spacing: 0.5px;\n`;\nconst StyledItemPrice = styled.span`\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 27px;\n  letter-spacing: 0.5px;\n`;\n\nexport default ProductListPage;\n"],"names":["callback","useState","data","setDate","loading","setLoading","isError","message","error","setError","getData","useCallback","useEffect","then","res","catch","err","StyledIconButton","styled","clicked","theme","COLORS","LIGHT_PRIMARY","PRIMARY","product","onClickCallback","isInCart","isClicked","setIsClicked","onClick","prev","tryAdd","size","StyledContainer","StyledFabBox","StyledCountBox","WHITE","count","color","ProductContainer","handleClickItem","onClickCartIcon","idsInCart","id","name","price","imageUrl","includes","StyledItem","width","height","src","StyledItemInfoBox","StyledItemInfo","StyledItemName","StyledItemPrice","Number","toLocaleString","StyledContent","StyledGridContainer","BASE_COMPONENT","navigate","useNavigate","dispatch","useDispatch","useSelector","state","cart","productsInCart","products","useRequest","getProductList","productList","useMemo","map","AddProductToCartAsync","removeProductToCartAsync","Loading","to"],"sourceRoot":""}