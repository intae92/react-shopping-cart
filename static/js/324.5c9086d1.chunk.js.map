{"version":3,"file":"static/js/324.5c9086d1.chunk.js","mappings":"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","sources":["components/common/PriceBox.jsx","components/common/CheckBox.jsx","components/common/Counter.jsx","components/common/DeleteIconButton.jsx","components/CartList.jsx","components/common/OrderBox.jsx","pages/CartPage.jsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nfunction PriceBox({ price, fontSize }) {\n  return <StyledPriceBox fontSize={fontSize}>{Number(price).toLocaleString()}Ïõê</StyledPriceBox>;\n}\n\nconst StyledPriceBox = styled.span`\n  font-weight: 400;\n  font-size: ${({ fontSize }) => fontSize || 16}px;\n  line-height: 24px;\n  text-align: right;\n  letter-spacing: 0.5px;\n`;\n\nexport default PriceBox;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { BsCheckSquareFill, BsSquare } from 'react-icons/bs';\n\nfunction CheckBox({ isClicked = true, boxSize = 30, labelText, onClickCallback = () => {} }) {\n  const [clicked, setClicked] = useState();\n\n  const handleClick = () => {\n    setClicked((prev) => !prev);\n    onClickCallback(!clicked);\n  };\n\n  useEffect(() => {\n    setClicked(isClicked);\n  }, [isClicked]);\n\n  return (\n    <StyledCheckBoxLayout onClick={handleClick}>\n      {clicked ? <BsCheckSquareFill size={boxSize} /> : <BsSquare size={boxSize} />}\n      <span>{labelText}</span>\n    </StyledCheckBoxLayout>\n  );\n}\n\nconst StyledCheckBoxLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.COLORS.PRIMARY};\n  &:hover {\n    & > span {\n      color: ${({ theme }) => theme.COLORS.LIGHT_PRIMARY};\n    }\n    color: ${({ theme }) => theme.COLORS.LIGHT_PRIMARY};\n  }\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 20px;\n  letter-spacing: 0.5px;\n  & > span {\n    color: ${({ theme }) => theme.COLORS.BLACK};\n  }\n`;\n\nexport default CheckBox;\n","import { TiArrowSortedDown, TiArrowSortedUp } from 'react-icons/ti';\nimport styled from 'styled-components';\n\nfunction Counter({ onClickCallback, count }) {\n  const handlUp = (count) => {\n    onClickCallback(count + 1);\n  };\n\n  const handleDown = (count) => {\n    if (count === 1) return;\n    onClickCallback(count - 1);\n  };\n\n  return (\n    <StyledCounterLayout>\n      <StyledNumberBox>\n        <span>{count}</span>\n      </StyledNumberBox>\n      <StyledArrowWrapper>\n        <StyledArrowBox onClick={() => handlUp(count)}>\n          <TiArrowSortedUp size={20} />\n        </StyledArrowBox>\n        <StyledArrowBox onClick={() => handleDown(count)}>\n          <TiArrowSortedDown size={20} />\n        </StyledArrowBox>\n      </StyledArrowWrapper>\n    </StyledCounterLayout>\n  );\n}\n\nconst StyledCounterLayout = styled.div`\n  border: 1px solid #dddddd;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  width: 100px;\n`;\n\nconst StyledNumberBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  font-weight: 400;\n  font-size: 24px;\n  line-height: 19px;\n  letter-spacing: 0.5px;\n  color: #333333;\n`;\n\nconst StyledArrowWrapper = styled.div``;\n\nconst StyledArrowBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-left: 1px solid #dddddd;\n  &:nth-child(1) {\n    border-bottom: 1px solid #dddddd;\n  }\n  cursor: pointer;\n`;\n\nexport default Counter;\n","import { RiDeleteBinLine } from 'react-icons/ri';\nimport styled from 'styled-components';\n\nfunction DeleteIconButton({ size = 25, onClickCallback }) {\n  return (\n    <DeleteButtonLayout onClick={onClickCallback}>\n      <RiDeleteBinLine size={size} />\n    </DeleteButtonLayout>\n  );\n}\n\nconst DeleteButtonLayout = styled.div`\n  color: ${({ theme }) => theme.COLORS.LIGHT_BLACK};\n  &:hover {\n    color: ${({ theme }) => theme.COLORS.LIGHT_PRIMARY};\n    transform: scale(1.1);\n    cursor: pointer;\n  }\n`;\n\nexport default DeleteIconButton;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport {\n  allCheckProduct,\n  allUnCheckProduct,\n  checkProduct,\n  removeProductToCartAsync,\n  setOrderDetail,\n  unCheckProduct,\n} from '../store/modules/cart/actions';\nimport { StyledImageWrapper, StyledImg } from './common';\nimport CheckBox from './common/CheckBox';\n\nimport Counter from './common/Counter';\nimport DeleteIconButton from './common/DeleteIconButton';\nimport PriceBox from './common/PriceBox';\n\nfunction CartList({ products, checkedIds, count, orderDetail }) {\n  const dispatch = useDispatch();\n  const [allChecked, setAllChecked] = useState(true);\n\n  const onClickCheckProduct = (args) => dispatch(checkProduct(args));\n  const onClickUnCheckProduct = (args) => dispatch(unCheckProduct(args));\n\n  const onClickAllCkeck = (isAllCheck) => {\n    setAllChecked(isAllCheck);\n\n    if (isAllCheck) {\n      dispatch(allCheckProduct());\n      return;\n    }\n    dispatch(allUnCheckProduct());\n  };\n\n  const handlRemoveProductsToCart = async (ids) => {\n    if (ids.length === 0) {\n      alert('ÏÇ≠Ï†ú Ìï† ÏÉÅÌíàÏùÑ ÏÑ†ÌÉùÌï¥ Ï£ºÏÑ∏Ïöî.');\n      return;\n    }\n\n    const isRemove = window.confirm('Ìï¥Îãπ ÏÉÅÌíàÎì§ÏùÑ Ïû•Î∞îÍµ¨ÎãàÏóêÏÑú ÏÇ≠Ï†ú ÌïòÏãúÍ≤†ÏäµÎãàÍπå?');\n    if (!isRemove) return;\n\n    await Promise.all(\n      ids.map((id) => {\n        return new Promise((resolve, reject) => {\n          try {\n            const res = dispatch(removeProductToCartAsync(id));\n            resolve(res);\n          } catch (err) {\n            reject(err);\n          }\n        });\n      })\n    );\n  };\n\n  useEffect(() => {\n    const isAllCheck = products.length === checkedIds.length;\n    setAllChecked(isAllCheck);\n  }, [checkedIds, products]);\n\n  return (\n    <StyledCartListLayout>\n      <StyledCartListOptionWrapper>\n        <CheckBox\n          labelText={allChecked ? 'ÏÑ†ÌÉùÌï¥Ï†ú' : 'Ï†ÑÏ≤¥ÏÑ†ÌÉù'}\n          isClicked={allChecked}\n          onClickCallback={onClickAllCkeck}\n        />\n        <StyledDeleteButton onClick={() => handlRemoveProductsToCart(checkedIds)}>\n          ÏÉÅÌíà ÏÇ≠Ï†ú\n        </StyledDeleteButton>\n      </StyledCartListOptionWrapper>\n      <StyledCartListWrapper>\n        <StyledCartListTitle>\n          <span>Îì†Îì†Î∞∞ÏÜ° ÏÉÅÌíà({count}Í∞ú)</span>\n        </StyledCartListTitle>\n        <StyledCartList>\n          {products.map((product) => {\n            const { id } = product;\n            const { quantity, price } = orderDetail[id];\n\n            return (\n              <CartListItem\n                key={id}\n                dispatch={dispatch}\n                product={product}\n                price={price}\n                quantity={quantity}\n                isClicked={checkedIds.includes(id)}\n                onClickCheck={() => onClickCheckProduct({ id, price, quantity })}\n                onClickUnCheck={() => onClickUnCheckProduct({ id, price, quantity })}\n              />\n            );\n          })}\n        </StyledCartList>\n      </StyledCartListWrapper>\n    </StyledCartListLayout>\n  );\n}\n\nconst CartListItem = ({\n  dispatch,\n  product,\n  price,\n  quantity,\n  isClicked,\n  onClickCheck,\n  onClickUnCheck,\n}) => {\n  const { id, name, price: retailPrice, imageUrl } = product;\n\n  const handleRemoveItem = (id) => {\n    const isRemove = window.confirm('Ìï¥Îãπ ÏÉÅÌíàÏùÑ Ïû•Î∞îÍµ¨ÎãàÏóêÏÑú ÏÇ≠Ï†ú ÌïòÏãúÍ≤†ÏäµÎãàÍπå?');\n    if (isRemove) dispatch(removeProductToCartAsync(id));\n  };\n\n  const onClickCounterCallback = (count) => {\n    dispatch(\n      setOrderDetail({\n        id,\n        quantity: count,\n        price: retailPrice * count,\n      })\n    );\n  };\n\n  const onClickCheckCallback = (isCheck) => {\n    if (isCheck) {\n      onClickCheck();\n      return;\n    }\n    onClickUnCheck();\n  };\n\n  return (\n    <StyledCartListItem>\n      <StyledItemInfoWrapper>\n        <div>\n          <CheckBox isClicked={isClicked} onClickCallback={onClickCheckCallback} />\n        </div>\n        <StyledItemInfo>\n          <StyledImageWrapper>\n            <StyledImg src={imageUrl}></StyledImg>\n          </StyledImageWrapper>\n          <span>{name}</span>\n        </StyledItemInfo>\n      </StyledItemInfoWrapper>\n      <StyledItemControlBox>\n        <DeleteIconButton onClickCallback={() => handleRemoveItem(id)} />\n        <Counter onClickCallback={onClickCounterCallback} count={quantity} />\n        <PriceBox price={price} />\n      </StyledItemControlBox>\n    </StyledCartListItem>\n  );\n};\n\nconst StyledDeleteButton = styled.button`\n  width: 117px;\n  height: 50px;\n  background: ${({ theme }) => theme.COLORS.WHITE};\n  border: 1px solid #bbbbbb;\n  border-radius: 0px;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 21px;\n  text-align: center;\n  color: #333333;\n  &:hover {\n    background: ${({ theme }) => theme.COLORS.PRIMARY};\n    color: ${({ theme }) => theme.COLORS.WHITE};\n    cursor: pointer;\n  }\n`;\n\nconst StyledCartListLayout = styled.div`\n  font-family: 'Noto Sans KR';\n  font-style: normal;\n`;\n\nconst StyledCartListOptionWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 50px 0;\n`;\n\nconst StyledCartListWrapper = styled.div`\n  width: 100%;\n`;\n\nconst StyledCartListTitle = styled.div`\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 33px;\n  letter-spacing: 0.5px;\n  color: #333333;\n  padding: 8px 0;\n`;\n\nconst StyledCartList = styled.div``;\nconst StyledCartListItem = styled.div`\n  border-top: 1.5px solid #cccccc;\n  &:nth-child(1) {\n    border-top: 4px solid #aaaaaa;\n  }\n  display: flex;\n  justify-content: space-between;\n  padding: 24px 0;\n`;\n\nconst StyledItemInfo = styled.div`\n  display: flex;\n  gap: 16px;\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 24px;\n  letter-spacing: 0.5px;\n  color: #333333;\n`;\n\nconst StyledItemInfoWrapper = styled.div`\n  display: flex;\n`;\n\nconst StyledItemControlBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-end;\n`;\n\nexport default CartList;\n","import React from 'react';\nimport styled from 'styled-components';\n\nfunction OrderBox({ titleText, price = 0, orders = 0 }) {\n  return (\n    <StyledOrderBoxLayout>\n      <StyledOrderTitle>\n        <span>{titleText}</span>\n      </StyledOrderTitle>\n      <StyledOrderContent>\n        <StyledOrderContentInfo>\n          <StyledUnderLineText>{titleText}</StyledUnderLineText>\n          <StyledUnderLineText>{Number(price).toLocaleString()}Ïõê</StyledUnderLineText>\n        </StyledOrderContentInfo>\n        <div>\n          <StyledButton>\n            Ï£ºÎ¨∏ÌïòÍ∏∞(<span>{orders}</span>Í∞ú)\n          </StyledButton>\n        </div>\n      </StyledOrderContent>\n    </StyledOrderBoxLayout>\n  );\n}\n\nconst StyledOrderBoxLayout = styled.div`\n  border: 1px solid #dddddd;\n  border-radius: 0px;\n  margin-top: 122px;\n  height: 300px;\n`;\n\nconst StyledOrderTitle = styled.div`\n  border-bottom: 4px solid #dddddd;\n  height: 25%;\n  font-weight: 400;\n  font-size: 24px;\n  line-height: 33px;\n  letter-spacing: 0.5px;\n  color: #333333;\n  display: flex;\n  align-items: center;\n  padding: 0 10%;\n`;\n\nconst StyledOrderContent = styled.div`\n  padding: 10% 10%;\n`;\n\nconst StyledOrderContentInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst StyledUnderLineText = styled.span`\n  font-weight: 700;\n  font-size: 1.3rem;\n  line-height: 27px;\n  text-align: center;\n  letter-spacing: 0.5px;\n  color: #333333;\n  background: linear-gradient(to bottom, #fff, 0%, rgba(42, 193, 188, 0.5));\n  background-repeat: repeat-x;\n  background-size: 100vw 0.4rem;\n  background-position: left bottom 5px;\n`;\n\nconst StyledButton = styled.button`\n  background: #2ac1bc;\n  border-radius: 0px;\n  border: none;\n  width: 100%;\n  height: 73px;\n  font-weight: 400;\n  font-size: 24px;\n  line-height: 21px;\n  text-align: center;\n  color: #ffffff;\n  margin-top: 2rem;\n`;\n\nexport default OrderBox;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport CartList from '../components/CartList';\nimport OrderBox from '../components/common/OrderBox';\nimport { allCheckProduct } from '../store/modules/cart/actions';\n\nfunction CartPage() {\n  const dispatch = useDispatch();\n  const { products, checkedIds, count, orderDetail, totalPrice, totalOrders } = useSelector(\n    (state) => state.cart\n  );\n\n  useEffect(() => {\n    dispatch(allCheckProduct());\n  }, [dispatch]);\n\n  return (\n    <StyledContentLayout>\n      <StyledContentWrapper>\n        <StyledContentHeader>\n          <StyledHeaderTitle>Ïû•Î∞îÍµ¨Îãà</StyledHeaderTitle>\n        </StyledContentHeader>\n        <StyledContent>\n          <CartList\n            products={products}\n            checkedIds={checkedIds}\n            count={count}\n            orderDetail={orderDetail}\n          />\n          <OrderBox titleText={'Í≤∞Ï†úÏòàÏÉÅÍ∏àÏï°'} price={totalPrice} orders={totalOrders} />\n        </StyledContent>\n      </StyledContentWrapper>\n    </StyledContentLayout>\n  );\n}\n\nconst StyledContentLayout = styled.div`\n  width: 100%;\n  height: 100%;\n  margin-top: 3vh;\n`;\n\nconst StyledContentWrapper = styled.div`\n  width: 80%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: auto;\n  overflow: auto;\n`;\n\nconst StyledContentHeader = styled.div`\n  width: 100%;\n  height: 100%;\n  text-align: center;\n\n  border-bottom: 4px solid #333333;\n  padding: 24px 0;\n`;\n\nconst StyledHeaderTitle = styled.span`\n  font-family: 'Noto Sans KR';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 37px;\n  text-align: center;\n  letter-spacing: 0.5px;\n  color: #333333;\n`;\n\nconst StyledContent = styled.div`\n  width: 90%;\n  height: 100%;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 2fr));\n  gap: 40px;\n`;\n\nexport default CartPage;\n"],"names":["StyledPriceBox","styled","fontSize","price","Number","toLocaleString","StyledCheckBoxLayout","theme","COLORS","PRIMARY","LIGHT_PRIMARY","BLACK","isClicked","boxSize","labelText","onClickCallback","useState","clicked","setClicked","useEffect","onClick","prev","size","StyledCounterLayout","StyledNumberBox","StyledArrowWrapper","StyledArrowBox","count","handlUp","handleDown","DeleteButtonLayout","LIGHT_BLACK","CartListItem","dispatch","product","quantity","onClickCheck","onClickUnCheck","id","name","retailPrice","imageUrl","StyledCartListItem","StyledItemInfoWrapper","isCheck","StyledItemInfo","src","StyledItemControlBox","window","confirm","removeProductToCartAsync","handleRemoveItem","setOrderDetail","PriceBox","StyledDeleteButton","WHITE","StyledCartListLayout","StyledCartListOptionWrapper","StyledCartListWrapper","StyledCartListTitle","StyledCartList","products","checkedIds","orderDetail","useDispatch","allChecked","setAllChecked","handlRemoveProductsToCart","ids","length","alert","Promise","all","map","resolve","reject","err","isAllCheck","allCheckProduct","allUnCheckProduct","includes","args","checkProduct","unCheckProduct","StyledOrderBoxLayout","StyledOrderTitle","StyledOrderContent","StyledOrderContentInfo","StyledUnderLineText","StyledButton","titleText","orders","StyledContentLayout","StyledContentWrapper","StyledContentHeader","StyledHeaderTitle","StyledContent","useSelector","state","cart","totalPrice","totalOrders"],"sourceRoot":""}