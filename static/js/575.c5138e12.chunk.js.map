{"version":3,"file":"static/js/575.c5138e12.chunk.js","mappings":"0OAGMA,EAAW,iDAEXC,EAAc,mCAAG,8FACRC,GAAAA,CAAM,CACjBC,OAAQ,MACRC,IAAI,GAAD,OAAKJ,EAAL,eAHgB,mFAAH,qDAOdK,EAAc,mCAAG,WAAOC,GAAP,iFACRJ,GAAAA,CAAM,CACjBC,OAAQ,MACRC,IAAI,GAAD,OAAKJ,EAAL,qBAA0BM,KAHV,mFAAH,uD,yECcpB,IAxBmB,SAACC,GAClB,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,CAAEK,SAAS,EAAOC,QAAS,KAA9D,eAAOC,EAAP,KAAcC,EAAd,KAEMC,GAAUC,EAAAA,EAAAA,cAAW,iBAAC,8FACbX,IADa,mFAEzB,CAACA,IAcJ,OAZAY,EAAAA,EAAAA,YAAU,WACJV,GAAQM,EAAMF,SAElBI,IACGG,MAAK,SAACC,GACLX,EAAQW,EAAIZ,MACZG,GAAW,MAGZU,OAAM,SAACC,GAAD,OAASP,EAAS,CAAEH,SAAS,EAAMC,QAASS,EAAIT,eACxD,CAACG,EAASR,EAAMM,IAEZ,CAAEN,KAAAA,EAAME,QAAAA,EAASI,MAAAA,K,2JC4B1B,IAAMS,EAAgBC,EAAAA,GAAAA,IAAH,6EAMbC,EAAsBD,EAAAA,GAAAA,IAAH,uJASnBE,EAAaF,EAAAA,GAAAA,IAAH,+EAMVG,GAAoBH,EAAAA,EAAAA,IAAOI,EAAAA,GAAAA,kBAAPJ,CAAH,wFAKjBK,GAAiBL,EAAAA,EAAAA,IAAOI,EAAAA,GAAAA,YAAPJ,CAAH,mDAIdM,EAAiBN,EAAAA,GAAAA,KAAH,iHAMdO,EAAkBP,EAAAA,GAAAA,KAAH,iHAOfQ,EAAmBR,EAAAA,GAAAA,OAAH,6HAKT,qBAAGS,MAAkBC,OAAOC,WAGzC,UA/FA,WACE,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAuCC,EAAAA,EAAAA,GAAWtC,EAAAA,GAApCuC,EAAd,EAAQ/B,KAAmBE,EAA3B,EAA2BA,QAErB8B,EAAe,mCAAG,WAAOnC,GAAP,iEACtB+B,EAAS,GAAD,OAAI/B,IADU,2CAAH,sDAIfoC,EAAkB,WACtBC,MAAM,uCAGR,OAAIhC,EAAgB,MAGlB,SAACa,EAAD,WACE,SAACE,EAAD,UACGc,EAAYI,KAAI,SAACC,GAChB,IAAQvC,EAA8BuC,EAA9BvC,GAAIwC,EAA0BD,EAA1BC,KAAMC,EAAoBF,EAApBE,MAAOC,EAAaH,EAAbG,SACzB,OACE,UAACrB,EAAD,YACE,SAAC,KAAD,CACEsB,MAAO,SACPC,OAAQ,SACRC,QAAS,kBAAMV,EAAgBnC,IAHjC,UAIE,SAAC,KAAD,CAAW2C,MAAO,SAAUG,IAAKJ,OAEnC,UAACpB,EAAD,YACE,UAACE,EAAD,CAAgBqB,QAAS,kBAAMV,EAAgBnC,IAA/C,WACE,SAACyB,EAAD,UAAiBe,KACjB,UAACd,EAAD,WAAkBqB,OAAON,GAAOO,iBAAhC,iBAEF,SAACrB,EAAD,CAAkBkB,QAAST,EAA3B,UACE,SAAC,MAAD,CAAgBa,KAAM,YAbXjD","sources":["api.js","hooks/useRequest.js","pages/ProductListPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst DEV_URL = 'http://localhost:4000';\nconst PROD_URL = 'https://coke-react-shopping-cart.herokuapp.com';\n\nconst getProductList = async () => {\n  return await axios({\n    method: 'GET',\n    url: `${PROD_URL}/products`,\n  });\n};\n\nconst getProductItem = async (id) => {\n  return await axios({\n    method: 'GET',\n    url: `${PROD_URL}/products/${id}`,\n  });\n};\n\nexport { getProductList, getProductItem };\n","import { useState, useEffect, useCallback } from 'react';\n\nconst useRequest = (callback) => {\n  const [data, setDate] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState({ isError: false, message: '' });\n\n  const getData = useCallback(async () => {\n    return await callback();\n  }, [callback]);\n\n  useEffect(() => {\n    if (data || error.isError) return;\n\n    getData()\n      .then((res) => {\n        setDate(res.data);\n        setLoading(false);\n        return;\n      })\n      .catch((err) => setError({ isError: true, message: err.message }));\n  }, [getData, data, error]);\n\n  return { data, loading, error };\n};\n\nexport default useRequest;\n","import { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { GiShoppingCart } from 'react-icons/gi';\nimport { BASE_COMPONENT, StyledImageWrapper, StyledImg } from '../components/common';\nimport useRequest from '../hooks/useRequest';\nimport { getProductList } from '../api';\n\nfunction ProductListPage() {\n  const navigate = useNavigate();\n  const { data: productList, loading } = useRequest(getProductList);\n\n  const handleClickItem = async (id) => {\n    navigate(`${id}`);\n  };\n\n  const handleClickCart = () => {\n    alert('기능 추가중...');\n  };\n\n  if (loading) return null;\n\n  return (\n    <StyledContent>\n      <StyledGridContainer>\n        {productList.map((product) => {\n          const { id, name, price, imageUrl } = product;\n          return (\n            <StyledItem key={id}>\n              <StyledImageWrapper\n                width={'middle'}\n                height={'middle'}\n                onClick={() => handleClickItem(id)}>\n                <StyledImg width={'middle'} src={imageUrl} />\n              </StyledImageWrapper>\n              <StyledItemInfoBox>\n                <StyledItemInfo onClick={() => handleClickItem(id)}>\n                  <StyledItemName>{name}</StyledItemName>\n                  <StyledItemPrice>{Number(price).toLocaleString()} 원</StyledItemPrice>\n                </StyledItemInfo>\n                <StyledIconButton onClick={handleClickCart}>\n                  <GiShoppingCart size={25} />\n                </StyledIconButton>\n              </StyledItemInfoBox>\n            </StyledItem>\n          );\n        })}\n      </StyledGridContainer>\n    </StyledContent>\n  );\n}\n\nconst StyledContent = styled.div`\n  width: 100%;\n  height: 100%;\n  margin-top: 5vh;\n`;\n\nconst StyledGridContainer = styled.div`\n  display: grid;\n  gap: 18px;\n  width: 80%;\n  grid-template-columns: repeat(4, 1fr);\n  margin: auto;\n  overflow-y: auto;\n`;\n\nconst StyledItem = styled.div`\n  width: 250px;\n  height: 330px;\n  cursor: pointer;\n`;\n\nconst StyledItemInfoBox = styled(BASE_COMPONENT.flexCenterWrapper)`\n  justify-content: space-between;\n  margin: 16px 8px 0px 8px;\n`;\n\nconst StyledItemInfo = styled(BASE_COMPONENT.flexWrapper)`\n  flex-direction: column;\n`;\n\nconst StyledItemName = styled.span`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 22px;\n  letter-spacing: 0.5px;\n`;\nconst StyledItemPrice = styled.span`\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 27px;\n  letter-spacing: 0.5px;\n`;\n\nconst StyledIconButton = styled.button`\n  border: none;\n  background: none;\n  &:hover {\n    transform: scale(1.1);\n    color: ${({ theme }) => theme.COLORS.PRIMARY};\n  }\n`;\nexport default ProductListPage;\n"],"names":["PROD_URL","getProductList","axios","method","url","getProductItem","id","callback","useState","data","setDate","loading","setLoading","isError","message","error","setError","getData","useCallback","useEffect","then","res","catch","err","StyledContent","styled","StyledGridContainer","StyledItem","StyledItemInfoBox","BASE_COMPONENT","StyledItemInfo","StyledItemName","StyledItemPrice","StyledIconButton","theme","COLORS","PRIMARY","navigate","useNavigate","useRequest","productList","handleClickItem","handleClickCart","alert","map","product","name","price","imageUrl","width","height","onClick","src","Number","toLocaleString","size"],"sourceRoot":""}